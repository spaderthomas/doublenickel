#include "common.glsl"
#include "sdf.glsl"

out vec4 color;
in vec4 f_color;
in vec2 f_uv;



void main() {
	vec2 world = gl_FragCoord.xy + camera;

	float dist = 0.0;
	if (shape == SDF_CIRCLE) {
		dist = sdf_circle(world, point, radius);
	}
	else if (shape == SDF_RING) {
		dist = sdf_ring(world, point, inner_radius, radius);
	}
	else if (shape == SDF_BOX) {
		dist = sdf_box(world, point, size);           
	}
	else if (shape == SDF_ORIENTED_BOX) {
		dist = sdf_oriented_box(world, center_a, center_b, thickness);           
		// DBG(green);
	}


	float alpha = smoothstep(0.0, -edge_thickness, dist);
	color = vec4(f_color.xyz, alpha * f_color.a);
}
