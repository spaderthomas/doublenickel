#include "common.glsl"
#include "fluid.glsl"

out vec4 color;

uniform mat4 projection;
uniform mat4 view;

const vec2 vertices [6] = vec2[](
    vec2(-1.0, -1.0),
    vec2( 1.0, -1.0),
    vec2(-1.0,  1.0),
    vec2(-1.0,  1.0),
    vec2( 1.0, -1.0),
    vec2( 1.0,  1.0)
);


const float size = 0.0;
const float alpha_max = 0.0;
const float alpha_min = 0.00;

void main() {
	Particle particle = particles[gl_InstanceID];

	vec2 position = particle.position + vertices[gl_VertexID] * size;
	gl_Position = projection * view * vec4(position, 0.0, 1.0);

	CapsuleHitResult result = is_within_system(particle.position);

	float max_velocity = 50.0;
	vec2 normalized_velocity = vec2(abs(particle.local_velocity.x / max_velocity), abs(particle.local_velocity.y / max_velocity)) / 2;
	color = vec4(normalized_velocity.x, normalized_velocity.y, 1.0, 1.0);
	//color = vec4(particle.color.xyz, 1.0);
	//color = spring_green;
	color.a = mix(alpha_max, alpha_min, result.distance / system.radius);
	//color = clear;
}
 
