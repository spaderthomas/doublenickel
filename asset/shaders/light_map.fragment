#include "common.glsl"
#include "light.glsl"

in vec4 f_color;
in vec2 f_uv;

out vec4 color;


void main () {
    DBG(indian_red);
    vec2 position = gl_FragCoord.xy + camera;

    vec4 sample_color = black;
    vec3 base_color = sample_color.rgb * sample_color.a;
    vec3 normal = vec3(0.0, 0.0, 0.0);

    color = black;

    Light global_light;
    // global_light.intensity = 0.5;
    global_light.intensity = 0.025;
    global_light.color = white;
    color.rgb += base_color.rgb * global_light.color.rgb * global_light.intensity;


    for (int i = 0; i < num_lights; i++) {
        Light light = lights[i];

        vec2 banded_uv = band_light_uvs(light, f_uv, position);
        vec2 banded_position = banded_uv * native_resolution + camera;;

        LitFragment lit_fragment = light_fragment(light, banded_position, normal);
        color.rgb += base_color * lit_fragment.light_color;
        color.rgb += lit_fragment.volumetric_color; 
    }

    color.a = 1.0;}
